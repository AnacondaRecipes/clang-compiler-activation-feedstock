{% set version = "11.0.0.rc1" %}

package:
  name: clang-compiler-activation
  version: {{ version }}

# Not strictly needed but enables automatic updates from the bot
source:
  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(".rc", "-rc") }}/llvm-project-{{ version.replace(".rc", "rc") }}.tar.xz
  sha256: 25da496d46be7cced8192e21fe4c6ca72eed5366f6ee09b9d436e5d2229f83a4

build:
  skip: true  # [win]
  number: 0

requirements:
  build:
    - libcxx {{ version }}

outputs:
  - name: clang_{{ cross_target_platform }}
    script: install-clang.sh
    requirements:
      - clang {{ version }}
      - llvm-tools {{ version }}
      - cctools_{{ cross_target_platform }}
      - ld64_{{ cross_target_platform }}   # [cross_target_platform == "osx-64"]
      # This brings in libraries for linux too. Split this again?
      - compiler-rt {{ version }}
      - compiler-rt_osx-64 {{ version }}
    test:
      commands:
        - {{ macos_machine }}-clang --version

  - name: clangxx_{{ cross_target_platform }}
    script: install-clangxx.sh
    requirements:
      host:
        - clangxx {{ version }}
        - libcxx {{ version }}  # [osx]
        - {{ pin_subpackage('clang_' ~ cross_target_platform, min_pin='x.x.x.x.x.x.x.x', max_pin='x.x.x.x.x.x.x.x') }}
      run:
        - clangxx {{ version }}
        # This is not needed in Linux for cross-compiling in a conda-build env, but is needed outside
        - libcxx >={{ version }}
        - {{ pin_subpackage('clang_' ~ cross_target_platform, min_pin='x.x.x.x.x.x.x.x', max_pin='x.x.x.x.x.x.x.x') }}
    # Since transitive run_exports are not currently possible
    # (here I would like the run dependency on clangxx to pull in the run_exports from it).
    run_exports:
      strong:
        - libcxx >={{ version }}
    test:
      commands:
        - echo {{ MACOSX_DEPLOYMENT_TARGET }}
        - echo {{ uname_machine }}
        - {{ macos_machine }}-clang++ --version

  - name: clang_bootstrap_{{ cross_target_platform }}
    requirements:
      host:
        - clangxx {{ version }}
        - libcxx {{ version }}
        - cctools_{{ cross_target_platform }}
        - ld64_{{ cross_target_platform }}
        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}
        - {{ pin_subpackage('clangxx_' ~ cross_target_platform, exact=True) }}
    build:
      always_include_files:
        - bin/
        - etc/
        - include/
        - lib/
        - libexec/
        - share/
      skip: true  # [cross_target_platform != target_platform]
    test:
      commands:
        - {{ macos_machine }}-clang --version
        - {{ macos_machine }}-clang++ --version
    about:
      home: https://llvm.org
      license: Apache-2.0
      license_family: Apache
      license_file: LLVM_LICENSE.txt
      summary: clang compiler components in one package for bootstrapping clang

about:
  home: http://github.com/AnacondaRecipes/aggregate
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: clang compilers for conda-build 3

extra:
  recipe-maintainers:
    - isuruf
    - mingwandroid
    - katietz
