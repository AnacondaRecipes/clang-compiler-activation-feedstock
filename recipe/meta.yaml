{% if version is not defined %}
{% set version = "19.1.1" %}
{% endif %}
{% set major_ver = version.split(".")[0] %}

{% set build_number = 0 %}

{% set last_major = "17" %}

# Based heavily on commit 4c4f99e in the conda-forge feedstock:
# https://github.com/conda-forge/clang-compiler-activation-feedstock/tree/4c4f99e

package:
  name: clang-compiler-activation
  version: {{ version }}

# # Originally this was to enable automatic updates from the bot,
# # but that doesn't work with several LLVM versions at the same time
# source:
#   url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(".rc", "-rc") }}/llvm-project-{{ version.replace(".rc", "rc") }}.src.tar.xz
#   sha256: 326335a830f2e32d06d0a36393b5455d17dc73e0bd1211065227ee014f92cbf8  # [version == "13.0.1"]


build:
  # TODO: this almost works on linux, I'm still not sure we need it though.
  skip: true  # [win or linux]
  number: {{ build_number }}

requirements:
  build:
    - cctools 1010.6  # [osx]
    - libcxx {{ last_major }}
    - gcc_{{ target_platform }}      # [linux]
    - clang {{ last_major }}  # [osx]

outputs:
  - name: clang_impl_{{ cross_target_platform }}
    script: install-clang.sh
    requirements:
      - clang {{ last_major }}
      - llvm-tools {{ last_major }}
      - cctools 1010.6  # [osx]
      - ld64 951.9  # [osx]
      # The last version of compiler-rt for osx-64 is 12, so this is a hack around that
      - compiler-rt >=12          # [(linux and x86_64)]
      - compiler-rt_{{ cross_target_platform }}    # [linux]
      - gcc_impl_{{ target_platform }}       # [linux]
    test:
      commands:
        - {{ CBUILD }}-clang --version
        - {{ macos_machine }}-clang --version

  - name: clang_{{ cross_target_platform }}
    script: install-clang-scripts.sh
    requirements:
      run:
        - {{ pin_subpackage("clang_impl_" ~ cross_target_platform, exact=True) }}
    test:
      commands:
        - {{ CBUILD }}-clang --version
        - {{ macos_machine }}-clang --version

  - name: clangxx_impl_{{ cross_target_platform }}
    script: install-clangxx.sh
    requirements:
      build:
        - cctools 1010.6  # [osx]
      host:
        - clangxx {{ last_major }}
        - libcxx {{ last_major }}         # [osx]
        - {{ pin_subpackage('clang_impl_' ~ cross_target_platform, exact=True) }}
        - gxx_impl_{{ target_platform }}  # [linux]
        # hack to force the solver to work
        - libllvm{{ last_major }} {{ last_major }}
      run:
        - clangxx {{ last_major }}
        # This is not needed in Linux for cross-compiling in a conda-build env, but is needed outside
        - libcxx >={{ last_major }}
        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}
        - gxx_impl_{{ target_platform }}            # [linux]
    test:
      commands:
        - echo {{ MACOSX_DEPLOYMENT_TARGET }}  # [linux]
        - echo {{ uname_kernel_release }}
        - echo {{ uname_machine }}
        - echo {{ FINAL_PYTHON_SYSCONFIGDATA_NAME }}
        - echo {{ CBUILD }}
        - echo {{ meson_cpu_family }}
        - {{ CBUILD }}-clang++ --version
        - {{ macos_machine }}-clang++ --version

  - name: clangxx_{{ cross_target_platform }}
    script: install-clangxx-scripts.sh
    requirements:
      run:
        - {{ pin_subpackage("clangxx_impl_" ~ cross_target_platform, exact=True) }}
        - {{ pin_subpackage("clang_" ~ cross_target_platform, exact=True) }}
    test:
      commands:
        - {{ CBUILD }}-clang++ --version
        - {{ macos_machine }}-clang++ --version
    # Since transitive run_exports are not currently possible
    # (here I would like the run dependency on clangxx to pull in the run_exports from it).
    run_exports:
      strong:
        - libcxx >={{ last_major }}

  - name: clang_bootstrap_{{ cross_target_platform }}
    script: install-clang-bootstrap.sh
    requirements:
      build:
        - cctools 1010.6  # [osx]
      host:
        - clangxx {{ last_major }}
        - libcxx {{ last_major }}        # [cross_target_platform in ("osx-64", "osx-arm64")]
        - cctools 1010.6  # [linux]
        - ld64 951.9   # [linux]
        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}
        - {{ pin_subpackage('clangxx_' ~ cross_target_platform, exact=True) }}
        # hack to force the solver to work
        - libllvm{{ last_major }} {{ last_major }}
    build:
      always_include_files:
        - bin/
        - etc/
        - include/
        - lib/
        - libexec/
        - share/
      ignore_run_exports_from:
        - libllvm{{ last_major }}
        - {{ pin_subpackage('clang_' ~ cross_target_platform, exact=True) }}
        - {{ pin_subpackage('clangxx_' ~ cross_target_platform, exact=True) }}
      missing_dso_whitelist:
        - lib/libLLVM-{{ last_major }}.dylib
        - "*/lib/libc++.1.dylib"
        - lib/libicu*.dylib
        - lib/libz*.dylib
        - lib/libxml*.dylib
        - lib/libtapi.dylib
        - lib/liblzma.*.dylib
        - lib/libiconv.*.dylib
        - lib/liblz4.*.dylib
        - lib/libffi.*.dylib
        - lib/libclang-cpp.{{ last_major }}.dylib
      skip: true  # [not osx]
    test:
      commands:
        - {{ macos_machine }}-clang --version
        - {{ macos_machine }}-clang++ --version
    about:
      home: https://llvm.org
      license: Apache-2.0
      license_family: Apache
      license_file: LLVM_LICENSE.txt
      summary: clang compiler components in one package for bootstrapping clang
      description: Bootstrap package containing both C and C++ Clang compilers for building Clang itself
  

about:
  home: https://github.com/AnacondaRecipes/clang-compiler-activation-feedstock
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: clang compilers for conda-build
  description: This package provides Clang compiler activation scripts for conda-build.
  doc_url: https://github.com/AnacondaRecipes/clang-compiler-activation-feedstock
  dev_url: https://github.com/AnacondaRecipes/clang-compiler-activation-feedstock

extra:
  recipe-maintainers:
    - isuruf
    - mingwandroid
    - katietz
    - h-vetinari
  skip-lints:
    - missing_tests
